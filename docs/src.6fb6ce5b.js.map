{"version":3,"sources":["package.json","../../src/Actions/clear.ts","../../src/Actions/help.ts","../../src/Actions/hue.ts","../../src/Actions/store.ts","../../src/Actions/version.ts","../../src/Actions/actions.ts","../src/CoAnMoPluginCli.ts","src/Actions/random.ts","src/Actions/actions.ts","src/index.ts"],"names":["module","exports","name","version","description","main","scripts","start","build","dependencies","devDependencies","typescript","keywords","homepage","repository","type","url"],"mappings":"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","file":"src.6fb6ce5b.js","sourceRoot":"..","sourcesContent":["module.exports={name:\"coanmo-which-imports-cli\",version:\"1.1.3\",description:\"Shows how to import and use a CoAnMo Plugin — in this case, ‘coanmo-plugin-cli’.\",main:\"index.html\",scripts:{start:\"parcel index.html --open\",build:\"rm -rf docs && parcel build -d docs --public-url /CoAnMo-Which-Imports-CLI/ index.html\"},dependencies:{\"coanmo-plugin-cli\":\"1.2.5\"},devDependencies:{\"parcel-bundler\":\"^1.6.1\",typescript:\"^3.9.7\"},keywords:[],homepage:\"https://codesandbox.io/s/coanmo-which-imports-cli-jwviq\",repository:{type:\"git\",url:\"https://github.com/rmplastow/CoAnMo-Which-Imports-CLI\"}};","import { ActionI, ActionContextI } from \"../CoAnMoPluginCli\";\n\nexport const clear: ActionI = {\n  name: \"clear\",\n  summary: \"Deletes the stdout log\",\n  synopsis: `Deletes everything in the on-screen stdout panel.\nDoes not delete history, or remotely stored logs.`,\n  fn(args: string[], context: ActionContextI) {\n    const { $stdout } = context;\n    if (args.length !== 0)\n      return `ERROR: 'clear' expected 0 args, but got ${args.length}`;\n    if ($stdout) $stdout.innerHTML = \"\";\n    return \"\";\n  }\n};\n","import { ActionI, ActionContextI } from \"../CoAnMoPluginCli\";\n\nexport function renderNameAndSummary(action: ActionI, length: number) {\n  return `${`${action.name} `.padEnd(\n    length - 1 - action.summary.length,\n    \".\"\n  )} ${action.summary}`;\n}\n\nexport const help: ActionI = {\n  name: \"help\",\n  summary: \"Shows information about actions\",\n  synopsis: `For a list of available actions:\n  > help\nTo show an action’s synopsis:\n  > help &lt;action>`,\n  fn(args: string[], context: ActionContextI) {\n    const { actions } = context;\n    if (args.length === 0)\n      return [\n        ...actions\n          .sort((a: ActionI, b: ActionI) => (a.name > b.name ? 1 : -1))\n          .map((action: ActionI) => renderNameAndSummary(action, 40)),\n        `Use \\`help &lt;action>\\` to show an action’s synopsis, eg \\`help ${\n          actions[actions.length - 1].name\n        }\\``\n      ].join(\"\\n\");\n    if (args.length !== 1)\n      return `ERROR: 'help' expected 0 or 1 args, but got ${args.length}`;\n    const actionNameLc = args[0].toLowerCase();\n    const action = actions.find(actn => actn.name === actionNameLc);\n    if (!action) return `ERROR: No such action '${actionNameLc}'`;\n    return action.synopsis;\n  }\n};\n","import { ActionI, ActionContextI } from \"../CoAnMoPluginCli\";\n\nexport enum Hue {\n  red = \"red\",\n  orange = \"orange\",\n  yellow = \"yellow\",\n  green = \"green\",\n  cyan = \"cyan\",\n  blue = \"blue\",\n  magenta = \"magenta\",\n  grey = \"grey\"\n}\n\n// See ‘/* The default hue-shift is blue */’ in ‘src/CoAnMoPluginCli.css’.\nexport const defaultHue = Hue.blue;\n\nexport function stringToHue(hueString: string): Hue | void {\n  switch (hueString) {\n    case \"red\":\n      return Hue.red;\n    case \"orange\":\n      return Hue.orange;\n    case \"yellow\":\n      return Hue.yellow;\n    case \"green\":\n      return Hue.green;\n    case \"cyan\":\n      return Hue.cyan;\n    case \"blue\":\n      return Hue.blue;\n    case \"magenta\":\n      return Hue.magenta;\n    case \"grey\":\n      return Hue.grey;\n    default:\n      return undefined;\n  }\n}\n\nexport function getCurrentHue(doc: Document): Hue {\n  const hueClass = doc.body.className\n    .split(/\\s+/)\n    .find(className => className.slice(0, 4) === \"hue-\");\n  if (!hueClass) return defaultHue; // `undefined` defaults to blue, if not found\n  const hue = stringToHue(hueClass.slice(4));\n  if (!hue) return defaultHue; // 'hue-nope' defaults to blue\n  return hue;\n}\n\nexport function stringToHueMeaning(hueString: string): string | void {\n  switch (hueString) {\n    case \"red\":\n      return \"Encountered a critical error\";\n    case \"orange\":\n      return \"Encountered an error\";\n    case \"yellow\":\n      return \"Encountered a warning\";\n    case \"green\":\n      return \"Connected to a service\";\n    case \"cyan\":\n      return \"Important information\";\n    case \"blue\":\n      return \"Not connected to a service\";\n    case \"magenta\":\n      return \"Service not responding\";\n    case \"grey\":\n      return \"Initialising or quitted\";\n    default:\n      return undefined;\n  }\n}\n\nexport function renderHueAndMeaning(hueString: string, index: number) {\n  const meaning = stringToHueMeaning(hueString) || \"\";\n  return `${`  ${index + 1}. ${hueString} `.padEnd(\n    40 - 1 - meaning.length,\n    \".\"\n  )} ${meaning}`;\n}\n\nexport function getHueSynopsis(): string {\n  const topHue = Object.keys(Hue)[0];\n  const hueTally = Object.keys(Hue).length;\n  return [\n    \"Get the CoAnMo’s current color scheme:\",\n    \"  > hue\",\n    `Set the color scheme to ${topHue}:`,\n    `  > hue ${topHue}`,\n    `The ${hueTally} color schemes and their meanings:`,\n    ...Object.keys(Hue).map(renderHueAndMeaning)\n  ].join(\"\\n\");\n}\n\nexport const hue: ActionI = {\n  name: \"hue\",\n  summary: \"Gets and sets the color scheme\",\n  synopsis: getHueSynopsis(),\n  fn(args: string[], context: ActionContextI) {\n    const { doc } = context;\n    const currentHue = getCurrentHue(doc);\n    if (args.length === 0) return `${currentHue}`;\n    if (args.length !== 1)\n      return `ERROR: 'hue' expected 0 or 1 args, but got ${args.length}`;\n    const newHue = stringToHue(args[0]);\n    if (!newHue)\n      return `ERROR: 'hue' got unexpected argument '${args[0]}' — try 'green'`;\n    doc.body.classList.remove(`hue-${currentHue}`);\n    doc.body.classList.add(`hue-${args[0]}`);\n    return `Was ${currentHue}, now ${args[0]}`;\n  }\n};\n","import { ActionI, ActionContextI } from \"../CoAnMoPluginCli\";\n\nexport function indefiniteArticleType(value: unknown) {\n  if (Array.isArray(value)) return \"an array\";\n  if (value === null) return \"null\"; // not 'a null'\n  if (value === undefined) return \"undefined\"; // not 'an undefined'\n  const type = typeof value;\n  return `a${\"aeiou\".includes(type.slice(0, 1)) ? \"n\" : \"\"} ${type}`;\n}\n\nexport const store: ActionI = {\n  name: \"store\",\n  summary: \"Manages the `store` object\",\n  synopsis: [\n    \"Get the CoAnMo’s current `store` object:\",\n    \"  > store\",\n    \"Replace the current `store` object:\",\n    `  > store { \"b\":true, \"n\":1 ,\"str\":\"!\" }`,\n    \"It can’t be deleted, but you can:\",\n    `  > store { }`,\n    \"The `store` object is persisted using\",\n    \"localStorage.setItem(), in the key\",\n    \"'CoAnMoPluginCli.store'. It can be used\",\n    \"to store any kind of settings. For\",\n    \"example, log-in credentials.\"\n  ].join(\"\\n\"),\n  fn(args: string[], context: ActionContextI) {\n    const { setStore, store } = context;\n    if (args.length === 0) return JSON.stringify(store, null, \"  \");\n    let newStore: { [key: string]: boolean | number | string };\n    try {\n      newStore = JSON.parse(args.join(\" \"));\n      const iaType = indefiniteArticleType(newStore);\n      if (iaType !== \"an object\")\n        return `ERROR: 'store' expects a JSON object, not ${iaType}`;\n      const errors = Object.keys(newStore).reduce(\n        (errors: string[], key: string) => {\n          const iaType = indefiniteArticleType(newStore[key]);\n          return [\"a boolean\", \"a number\", \"a string\"].includes(iaType)\n            ? errors\n            : [...errors, `'${key}' is ${iaType}`];\n        },\n        []\n      );\n      if (errors.length)\n        return (\n          \"ERROR: 'store' expects all values to be booleans, numbers and strings:\\n\" +\n          `  ${errors.join(\"\\n  \")}`\n        );\n    } catch (err) {\n      return `ERROR: Cannot parse 'CoAnMoPluginCli.store':\\n  ${err}`;\n    }\n    setStore(newStore);\n    const keyTally = Object.keys(newStore).length;\n    return `stored an object containing ${keyTally} value${\n      keyTally === 1 ? \"\" : \"s\"\n    }`;\n  }\n};\n// store { \"arr\":[456], \"boo\":true, \"nul\":null, \"num\":123, \"obj\":{}, \"str\":\"456\" }\n","import { ActionI, ActionContextI } from \"../CoAnMoPluginCli\";\n\nexport const version: ActionI = {\n  name: \"version\",\n  summary: \"Shows the name and version\",\n  synopsis: `Shows the \"name\" and \"version\" fields,\nfrom the CoAnMo’s ‘package.json’ file`,\n  fn(args: string[], context: ActionContextI) {\n    const { name, version } = context;\n    if (args.length !== 0)\n      return `ERROR: 'version' expected 0 args, but got ${args.length}`;\n    return `${name} ${version}`;\n  }\n};\n","import { clear } from \"./clear\";\nimport { help } from \"./help\";\nimport { hue } from \"./hue\";\nimport { store } from \"./store\";\nimport { version } from \"./version\";\n\nexport const actions = [clear, help, hue, store, version];\n","import \"./CoAnMoPluginCli.css\";\n\n// Re-export some generally useful actions.\nexport { actions as CoAnMoPluginCliActions } from \"./Actions/actions\";\n\nexport interface ActionContextI {\n  $stdout: HTMLElement | null;\n  actions: ActionI[];\n  doc: Document;\n  meta: string;\n  name: string;\n  setStore: (newStore: { [key: string]: boolean | number | string }) => void;\n  store: { [key: string]: boolean | number | string };\n  version: string;\n}\n\nexport interface ActionI {\n  name: string;\n  summary: string;\n  synopsis: string;\n  fn: (args: string[], context: ActionContextI) => string;\n}\n\nexport interface ParsedCommandI {\n  actionName: string;\n  args: string[];\n  filter: RegExp;\n}\n\nexport function parseCommand(command: string): ParsedCommandI {\n  const parts = command.trim().split(/\\s+/);\n  const matches = parts[0].match(/^\\/(.+)\\/([igm]*)$/);\n  return matches\n    ? {\n        actionName: parts[1].toLowerCase(), // because, iPad keyboard\n        args: parts.slice(2),\n        filter: RegExp(matches[1], matches[2])\n      }\n    : {\n        actionName: parts[0].toLowerCase(),\n        args: parts.slice(1),\n        filter: /^.?/ // matches everything\n      };\n}\n\nexport class CoAnMoPluginCli {\n  private $stdin: HTMLInputElement | null;\n  private $stdout: HTMLElement | null;\n  private actions: ActionI[] = [];\n  private store: { [key: string]: boolean | number | string } = {};\n\n  constructor(\n    private name: string,\n    private version: string,\n    stdinSelector: string,\n    stdoutSelector: string,\n    private doc: HTMLDocument,\n    private meta: string,\n    private storage: Storage\n  ) {\n    this.$stdin = doc.querySelector(stdinSelector);\n    this.$stdout = doc.querySelector(stdoutSelector);\n    this.log(`${name} ${version}`);\n    this.log(`${meta}`);\n\n    const storeRaw = this.storage.getItem(\"CoAnMoPluginCli.store\");\n    if (storeRaw) {\n      let store;\n      try {\n        store = JSON.parse(storeRaw);\n        if (typeof store !== \"object\" || store === null)\n          this.log(`ERROR: 'CoAnMoPluginCli.store' is not an object`);\n        // @TODO check that all values are strings\n      } catch (err) {\n        this.log(`ERROR: Cannot parse 'CoAnMoPluginCli.store':\\n  ${err}`);\n      }\n      this.store = store;\n    }\n\n    if (this.$stdin)\n      this.$stdin.addEventListener(\"keydown\", (evt: KeyboardEvent) => {\n        if (this.$stdin && evt.key === \"Enter\") this.run(this.$stdin.value);\n      });\n  }\n\n  addActions(actions: ActionI[]) {\n    actions.forEach(action => this.actions.push(action));\n  }\n\n  focusOnInput() {\n    if (this.$stdin) this.$stdin.focus();\n  }\n\n  log(message: string): string {\n    if (!this.$stdout) return message;\n    const currentHtml = this.$stdout.innerHTML;\n    let newHtml;\n    if (currentHtml.trim() === \"\") newHtml = message;\n    else newHtml = currentHtml + `\\n${message}`;\n    newHtml = newHtml\n      .split(\"\\n\")\n      .map(\n        (line: string): string => {\n          return \"> \" === line.substr(0, 2) || \"ERROR: \" === line.substr(0, 7)\n            ? `<b>${line}</b>`\n            : line;\n        }\n      )\n      .join(\"\\n\");\n    this.$stdout.innerHTML = newHtml;\n    this.$stdout.scroll(0, 999999);\n    return message;\n  }\n\n  run(command: string): string | void {\n    if (!this.$stdin) return;\n    this.$stdin.value = \"\";\n    const { actionName, args, filter } = parseCommand(command);\n    if (actionName === \"\") return this.log(\"> \");\n    if (!filter.test(this.meta)) return;\n    const action = this.actions.find(actn => actn.name === actionName);\n    if (!action)\n      return this.log(`ERROR: No such action '${actionName}' - try 'help'`);\n    this.log(`> ${actionName} ${args.join(\" \")}`);\n    return this.log(\n      action.fn(args, {\n        $stdout: this.$stdout,\n        actions: this.actions,\n        doc: this.doc,\n        meta: this.meta,\n        name: this.name,\n        setStore: (newStore: { [key: string]: boolean | number | string }) => {\n          this.storage.setItem(\n            \"CoAnMoPluginCli.store\",\n            JSON.stringify(newStore)\n          );\n          this.store = newStore;\n        },\n        store: this.store,\n        version: this.version\n      })\n    );\n  }\n}\n","import { ActionI } from \"coanmo-plugin-cli\";\n\nexport const random: ActionI = {\n  name: \"random\",\n  summary: \"Shows a random number\",\n  synopsis: \"Shows a random number\",\n  fn() {\n    return `${Math.random()}`.slice(2);\n  }\n};\n","import { CoAnMoPluginCliActions } from \"coanmo-plugin-cli\";\nimport { random } from \"./random\";\n\nexport const actions = [random, ...CoAnMoPluginCliActions];\n","import \"./style\";\nimport { name, version } from \"../package.json\";\nimport { CoAnMoPluginCli } from \"coanmo-plugin-cli\";\nimport { actions } from \"./Actions/actions\";\n\nclass CoAnMoWhichImportsCLI {\n  private cli: CoAnMoPluginCli;\n\n  constructor(\n    private name: string,\n    private version: string,\n    selector: string,\n    doc: HTMLDocument,\n    meta: string,\n  ) {\n    this.cli = new CoAnMoPluginCli(\n      name,\n      version,\n      `${selector} .stdin`,\n      `${selector} .stdout`,\n      doc,\n      meta,\n      window.localStorage\n    );\n\n    this.cli.addActions(actions);\n    this.cli.log(\"Ready\");\n  }\n\n  receiveMessage(event: MessageEvent) {\n    // @TODO add validation and security\n    if (typeof event.data === \"string\") this.cli.run(event.data);\n  }\n}\n\nconst coanmo = new CoAnMoWhichImportsCLI(\n  name,\n  version,\n  \"#coanmo-which-imports-cli\",\n  document,\n  'Some Meta String!'\n);\n\nwindow.addEventListener(\n  \"message\",\n  (event: MessageEvent) => coanmo.receiveMessage(event),\n  false\n);\n"]}